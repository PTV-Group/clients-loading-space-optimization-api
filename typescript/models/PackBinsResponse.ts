/* tslint:disable */
/* eslint-disable */
/**
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemNotPacked,
    ItemNotPackedFromJSON,
    ItemNotPackedFromJSONTyped,
    ItemNotPackedToJSON,
    PackedBin,
    PackedBinFromJSON,
    PackedBinFromJSONTyped,
    PackedBinToJSON,
} from './';

/**
 * Describes a packing solution.
 * @export
 * @interface PackBinsResponse
 */
export interface PackBinsResponse {
    /**
     * List with one entry for each bin that was used for packing items in this solution.
     * @type {Array<PackedBin>}
     * @memberof PackBinsResponse
     */
    packedBins?: Array<PackedBin>;
    /**
     * List of items and its quantities, that could not be processed in this request.
     * @type {Array<ItemNotPacked>}
     * @memberof PackBinsResponse
     */
    itemsNotPacked?: Array<ItemNotPacked>;
}

export function PackBinsResponseFromJSON(json: any): PackBinsResponse {
    return PackBinsResponseFromJSONTyped(json, false);
}

export function PackBinsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackBinsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'packedBins': !exists(json, 'packedBins') ? undefined : ((json['packedBins'] as Array<any>).map(PackedBinFromJSON)),
        'itemsNotPacked': !exists(json, 'itemsNotPacked') ? undefined : ((json['itemsNotPacked'] as Array<any>).map(ItemNotPackedFromJSON)),
    };
}

export function PackBinsResponseToJSON(value?: PackBinsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'packedBins': value.packedBins === undefined ? undefined : ((value.packedBins as Array<any>).map(PackedBinToJSON)),
        'itemsNotPacked': value.itemsNotPacked === undefined ? undefined : ((value.itemsNotPacked as Array<any>).map(ItemNotPackedToJSON)),
    };
}


