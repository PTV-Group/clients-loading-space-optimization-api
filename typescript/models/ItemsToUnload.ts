/* tslint:disable */
/* eslint-disable */
/**
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Defines the number of instances of an item to unload.
 * @export
 * @interface ItemsToUnload
 */
export interface ItemsToUnload {
    /**
     * ID of the item.
     * @type {string}
     * @memberof ItemsToUnload
     */
    itemId: string;
    /**
     * The amount of instances of the item to unload.
     * @type {number}
     * @memberof ItemsToUnload
     */
    numberOfInstances?: number;
}

export function ItemsToUnloadFromJSON(json: any): ItemsToUnload {
    return ItemsToUnloadFromJSONTyped(json, false);
}

export function ItemsToUnloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemsToUnload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'itemId': json['itemId'],
        'numberOfInstances': !exists(json, 'numberOfInstances') ? undefined : json['numberOfInstances'],
    };
}

export function ItemsToUnloadToJSON(value?: ItemsToUnload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'itemId': value.itemId,
        'numberOfInstances': value.numberOfInstances,
    };
}


