/* tslint:disable */
/* eslint-disable */
/**
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Bin,
    BinFromJSON,
    BinFromJSONTyped,
    BinToJSON,
    BinPackingOptions,
    BinPackingOptionsFromJSON,
    BinPackingOptionsFromJSONTyped,
    BinPackingOptionsToJSON,
    Item,
    ItemFromJSON,
    ItemFromJSONTyped,
    ItemToJSON,
} from './';

/**
 * 
 * @export
 * @interface PackBinsRequest
 */
export interface PackBinsRequest {
    /**
     * 
     * @type {Array<Item>}
     * @memberof PackBinsRequest
     */
    items: Array<Item>;
    /**
     * 
     * @type {Array<Bin>}
     * @memberof PackBinsRequest
     */
    bins: Array<Bin>;
    /**
     * 
     * @type {BinPackingOptions}
     * @memberof PackBinsRequest
     */
    options?: BinPackingOptions;
}

export function PackBinsRequestFromJSON(json: any): PackBinsRequest {
    return PackBinsRequestFromJSONTyped(json, false);
}

export function PackBinsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackBinsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(ItemFromJSON)),
        'bins': ((json['bins'] as Array<any>).map(BinFromJSON)),
        'options': !exists(json, 'options') ? undefined : BinPackingOptionsFromJSON(json['options']),
    };
}

export function PackBinsRequestToJSON(value?: PackBinsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(ItemToJSON)),
        'bins': ((value.bins as Array<any>).map(BinToJSON)),
        'options': BinPackingOptionsToJSON(value.options),
    };
}


