/* tslint:disable */
/* eslint-disable */
/**
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StackingRestrictionType,
    StackingRestrictionTypeFromJSON,
    StackingRestrictionTypeFromJSONTyped,
    StackingRestrictionTypeToJSON,
} from './';

/**
 * Define the stacking restriction for one item. Specifies which items are allowed or prohibited to be stacked on this item.
 * @export
 * @interface StackingRestrictions
 */
export interface StackingRestrictions {
    /**
     * ID of the item.
     * @type {string}
     * @memberof StackingRestrictions
     */
    itemId: string;
    /**
     * 
     * @type {StackingRestrictionType}
     * @memberof StackingRestrictions
     */
    restrictionType?: StackingRestrictionType;
    /**
     * Specifies the list of Item.id to which the restrictionType applies.
     * @type {Array<string>}
     * @memberof StackingRestrictions
     */
    itemIds?: Array<string>;
}

export function StackingRestrictionsFromJSON(json: any): StackingRestrictions {
    return StackingRestrictionsFromJSONTyped(json, false);
}

export function StackingRestrictionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StackingRestrictions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'itemId': json['itemId'],
        'restrictionType': !exists(json, 'restrictionType') ? undefined : StackingRestrictionTypeFromJSON(json['restrictionType']),
        'itemIds': !exists(json, 'itemIds') ? undefined : json['itemIds'],
    };
}

export function StackingRestrictionsToJSON(value?: StackingRestrictions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'itemId': value.itemId,
        'restrictionType': StackingRestrictionTypeToJSON(value.restrictionType),
        'itemIds': value.itemIds,
    };
}


