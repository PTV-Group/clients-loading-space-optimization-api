/*
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.binpacking.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.binpacking.model.StackingRestrictionType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ptvgroup.developer.client.binpacking.JSON;


/**
 * Define the stacking restriction for one item. Specifies which items are allowed or prohibited to be stacked on this item. 
 */
@ApiModel(description = "Define the stacking restriction for one item. Specifies which items are allowed or prohibited to be stacked on this item. ")
@JsonPropertyOrder({
  StackingRestrictions.JSON_PROPERTY_ITEM_ID,
  StackingRestrictions.JSON_PROPERTY_RESTRICTION_TYPE,
  StackingRestrictions.JSON_PROPERTY_ITEM_IDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T14:52:57.911967Z[Etc/UTC]")
public class StackingRestrictions {
  public static final String JSON_PROPERTY_ITEM_ID = "itemId";
  private String itemId;

  public static final String JSON_PROPERTY_RESTRICTION_TYPE = "restrictionType";
  private StackingRestrictionType restrictionType = StackingRestrictionType.ALL_ALLOWED;

  public static final String JSON_PROPERTY_ITEM_IDS = "itemIds";
  private List<String> itemIds = null;


  public StackingRestrictions itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * ID of the item.
   * @return itemId
  **/
  @ApiModelProperty(required = true, value = "ID of the item.")
  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public StackingRestrictions restrictionType(StackingRestrictionType restrictionType) {
    this.restrictionType = restrictionType;
    return this;
  }

   /**
   * Get restrictionType
   * @return restrictionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESTRICTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StackingRestrictionType getRestrictionType() {
    return restrictionType;
  }


  public void setRestrictionType(StackingRestrictionType restrictionType) {
    this.restrictionType = restrictionType;
  }


  public StackingRestrictions itemIds(List<String> itemIds) {
    this.itemIds = itemIds;
    return this;
  }

  public StackingRestrictions addItemIdsItem(String itemIdsItem) {
    if (this.itemIds == null) {
      this.itemIds = new ArrayList<>();
    }
    this.itemIds.add(itemIdsItem);
    return this;
  }

   /**
   * Specifies the list of Item.id to which the restrictionType applies.
   * @return itemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the list of Item.id to which the restrictionType applies.")
  @JsonProperty(JSON_PROPERTY_ITEM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getItemIds() {
    return itemIds;
  }


  public void setItemIds(List<String> itemIds) {
    this.itemIds = itemIds;
  }


  /**
   * Return true if this StackingRestrictions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StackingRestrictions stackingRestrictions = (StackingRestrictions) o;
    return Objects.equals(this.itemId, stackingRestrictions.itemId) &&
        Objects.equals(this.restrictionType, stackingRestrictions.restrictionType) &&
        Objects.equals(this.itemIds, stackingRestrictions.itemIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, restrictionType, itemIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StackingRestrictions {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    restrictionType: ").append(toIndentedString(restrictionType)).append("\n");
    sb.append("    itemIds: ").append(toIndentedString(itemIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

