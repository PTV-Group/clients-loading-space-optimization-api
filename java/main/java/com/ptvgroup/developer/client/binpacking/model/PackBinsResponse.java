/*
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.binpacking.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.binpacking.model.ItemNotPacked;
import com.ptvgroup.developer.client.binpacking.model.PackedBin;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ptvgroup.developer.client.binpacking.JSON;


/**
 * Describes a packing solution.
 */
@ApiModel(description = "Describes a packing solution.")
@JsonPropertyOrder({
  PackBinsResponse.JSON_PROPERTY_PACKED_BINS,
  PackBinsResponse.JSON_PROPERTY_ITEMS_NOT_PACKED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-29T13:38:38.009016Z[Etc/UTC]")
public class PackBinsResponse {
  public static final String JSON_PROPERTY_PACKED_BINS = "packedBins";
  private List<PackedBin> packedBins = null;

  public static final String JSON_PROPERTY_ITEMS_NOT_PACKED = "itemsNotPacked";
  private List<ItemNotPacked> itemsNotPacked = null;


  public PackBinsResponse packedBins(List<PackedBin> packedBins) {
    this.packedBins = packedBins;
    return this;
  }

  public PackBinsResponse addPackedBinsItem(PackedBin packedBinsItem) {
    if (this.packedBins == null) {
      this.packedBins = new ArrayList<>();
    }
    this.packedBins.add(packedBinsItem);
    return this;
  }

   /**
   * List with one entry for each bin that was used for packing items in this solution.
   * @return packedBins
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List with one entry for each bin that was used for packing items in this solution.")
  @JsonProperty(JSON_PROPERTY_PACKED_BINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PackedBin> getPackedBins() {
    return packedBins;
  }


  public void setPackedBins(List<PackedBin> packedBins) {
    this.packedBins = packedBins;
  }


  public PackBinsResponse itemsNotPacked(List<ItemNotPacked> itemsNotPacked) {
    this.itemsNotPacked = itemsNotPacked;
    return this;
  }

  public PackBinsResponse addItemsNotPackedItem(ItemNotPacked itemsNotPackedItem) {
    if (this.itemsNotPacked == null) {
      this.itemsNotPacked = new ArrayList<>();
    }
    this.itemsNotPacked.add(itemsNotPackedItem);
    return this;
  }

   /**
   * List of items and its quantities, that could not be processed in this request. 
   * @return itemsNotPacked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of items and its quantities, that could not be processed in this request. ")
  @JsonProperty(JSON_PROPERTY_ITEMS_NOT_PACKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ItemNotPacked> getItemsNotPacked() {
    return itemsNotPacked;
  }


  public void setItemsNotPacked(List<ItemNotPacked> itemsNotPacked) {
    this.itemsNotPacked = itemsNotPacked;
  }


  /**
   * Return true if this PackBinsResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackBinsResponse packBinsResponse = (PackBinsResponse) o;
    return Objects.equals(this.packedBins, packBinsResponse.packedBins) &&
        Objects.equals(this.itemsNotPacked, packBinsResponse.itemsNotPacked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packedBins, itemsNotPacked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackBinsResponse {\n");
    sb.append("    packedBins: ").append(toIndentedString(packedBins)).append("\n");
    sb.append("    itemsNotPacked: ").append(toIndentedString(itemsNotPacked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

