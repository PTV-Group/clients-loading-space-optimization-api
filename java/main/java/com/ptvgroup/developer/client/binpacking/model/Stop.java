/*
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.binpacking.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.binpacking.model.ItemsToUnload;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ptvgroup.developer.client.binpacking.JSON;


/**
 * Defines the list of items to be unloaded at this point.
 */
@ApiModel(description = "Defines the list of items to be unloaded at this point.")
@JsonPropertyOrder({
  Stop.JSON_PROPERTY_ITEMS_TO_UNLOAD
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T14:52:57.911967Z[Etc/UTC]")
public class Stop {
  public static final String JSON_PROPERTY_ITEMS_TO_UNLOAD = "itemsToUnload";
  private List<ItemsToUnload> itemsToUnload = new ArrayList<>();


  public Stop itemsToUnload(List<ItemsToUnload> itemsToUnload) {
    this.itemsToUnload = itemsToUnload;
    return this;
  }

  public Stop addItemsToUnloadItem(ItemsToUnload itemsToUnloadItem) {
    this.itemsToUnload.add(itemsToUnloadItem);
    return this;
  }

   /**
   * Defines the list of items to unload.
   * @return itemsToUnload
  **/
  @ApiModelProperty(required = true, value = "Defines the list of items to unload.")
  @JsonProperty(JSON_PROPERTY_ITEMS_TO_UNLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ItemsToUnload> getItemsToUnload() {
    return itemsToUnload;
  }


  public void setItemsToUnload(List<ItemsToUnload> itemsToUnload) {
    this.itemsToUnload = itemsToUnload;
  }


  /**
   * Return true if this Stop object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stop stop = (Stop) o;
    return Objects.equals(this.itemsToUnload, stop.itemsToUnload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemsToUnload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stop {\n");
    sb.append("    itemsToUnload: ").append(toIndentedString(itemsToUnload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

